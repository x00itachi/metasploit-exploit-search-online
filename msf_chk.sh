#!/bin/sh

metasploit="http://www.metasploit.com"
msf_se="$metasploit/modules/framework/search"
tmp="page.tmp"
tmp1="page.tmp1"
devmsf="http://dev.metasploit.com"
file="$2"


function getref {
        page=`cat $tmp`
        noresults="No results matched your query"
	srchresults="Search Results"
        if [[ $page =~ $noresults ]]; then
                echo "No exploit found"
	elif [[ $page =~ $srchresults  ]]; then
		echo "More than 1 refs found"			# found more than 1 exp for this ref. skipping for now
		cat $tmp | grep -i "resultbox" -A 1 | grep -i "href" | cut -d"\"" -f2 >$tmp1
		for urlparsed in `cat $tmp1`
		do
			url="$metasploit$urlparsed"
			printref
			epath
		done
		exit
        else
        url=`cat $tmp | cut -d"\"" -f2`
	printref
	epath
	fi
}

function printref {
        curl -s $url >$tmp
        echo -e "\nReference :"
        echo "=========="
        cat $tmp | grep -i "Vulnerability References" -A 10 | grep -i "href" | awk -F\> '{print $3}' | cut -d\< -f1
        echo -e "\nUsage Information :"
        echo "=================="
        cat $tmp | grep -i "usage information" -A 20 | grep msf | sed '/<div/ d' | sed 's/&gt;/\>/g' | sed -r 's/<\/?b(r\/)?>//g'
}

function downloadexploit {
	echo -e "\ndownload Exploit"
	exploit=`curl -s \`cat $tmp | grep -i ">Source Code<" | cut -d"\"" -f4\` | grep -i ">Download<" | cut -d"\"" -f2`
	echo "$devmsf$exploit"
	#echo -e "\nExploit page"
	#cat $tmp |grep -i "Development" -A 10
}

function usage {
	echo -e "USAGE:$0 <reference>\nEg: $0 CVE-2001-1000\nEg: $0 BID-2010\nEg: $0 OSVDB-2345\nEg: $0 MS10-13"
}

function epath {
		if [[ ! -z $file ]]; then 
			echo "dumping msf exploit path into $file..."
			cat $tmp | grep "msf" | sed 's/&gt;/\>/g' | sed -r 's/<\/?b(r\/)?>//g' | grep -i " use " | cut -d" " -f4 >tmp1
			echo "$trim,`cat tmp1`" >>$file
			rm -f tmp1
		fi
}

if [[ -z "$1" ]]; then
	usage
else
	trim=`echo $1 | sed -r 's/(\s*)//gi'`
	if [[ `echo $trim | tr [:lower:] [:upper:]` =~ "CVE-" ]]; then
		curl -s "$msf_se?cve=$trim" >$tmp
		getref
	elif [[ `echo $trim | tr [:lower:] [:upper:]` =~ "BID-" ]]; then
		curl -s "$msf_se?bid=`echo $trim | cut -d"-" -f2`" >$tmp
		getref
	elif [[ `echo $trim | tr [:lower:] [:upper:]` =~ "OSVDB-" ]]; then
		curl -s "$msf_se?osvdb=`echo $trim | cut -d"-" -f2`" >$tmp
		getref
	elif [[ `echo $trim | tr [:lower:] [:upper:]` =~ "MS" ]]; then
		curl -s "$msf_se?msb=`echo $trim | sed 's/MSB-//'`" >$tmp
		getref
	else usage
	fi
fi

rm -rf $tmp
rm -rf $tmp1
